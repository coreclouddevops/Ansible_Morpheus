---
- hosts: all
  become: true
  vars:
    volume_size: '8'
    volume_type: 'gp2'
    device_name: '/dev/xvdf'
    zone: 'us-east-2a'
    region: 'us-east-2'
    instanceid: "{{ ansible_env.INSTANCE_ID }}"

  tasks:
  # - name: Type Debug 1
  #   ignore_errors: yes
  #   debug:
  #   msg: {{ instanceid }}

  - name: Type Debug 2
    ignore_errors: yes
    debug:
    msg: "{{ instanceid }}"

  - name: Type Debug 3
    ignore_errors: yes
    debug:
    msg: "{{ region }}"
#     - name: Creating a new volume
#       ec2_vol:
#         aws_access_key: "{{ lookup('cypher','secret=secret/ans_a') }}"
#         aws_secret_key: "{{ lookup('cypher','secret=secret/ans_s') }}"
#         volume_size: "{{ volume_size }}"
#         volume_type: "{{ volume_type }}"
#         device_name: "{{ device_name }}"
#         region: "{{ region }}"
#         zone: "{{ zone }}"
#         tags:
#           Name: linux_volume
#       register: new_volume

#     - name: Attaching created volume
#       ec2_vol:
#         aws_access_key: "{{ lookup('cypher','secret=secret/ans_a') }}"
#         aws_secret_key: "{{ lookup('cypher','secret=secret/ans_s') }}"
#         #instance: "{{ item.id }}"
#         instance: "id"
#         #instance_ids: "id"
#         id: "{{ new_volume.volume_id }}"
#         device_name: "{{ device_name }}"
#         delete_on_termination: true
#         region: "{{ region }}"
#         zone: "{{ zone }}"
#       #loop: {{ ec2.instances }}
#       register: attach_volume
    
# - hosts: all
#   become: true
#   become_user: root
#   tasks:
#     - name: Mounting the volume
#       shell: |
#         sudo mkfs -t xfs /dev/xvdf 
#         sudo yum install xfsprogs
#         sudo mkdir /data
#         sudo mount /dev/xvdf /data
#         sudo echo "UUID="$(blkid | sed -n '/xvdf/s/.*UUID=\"\([^\"]*\)\".*/\1/p')" /data  xfs  defaults,nofail  0  2" >> /etc/fstab
